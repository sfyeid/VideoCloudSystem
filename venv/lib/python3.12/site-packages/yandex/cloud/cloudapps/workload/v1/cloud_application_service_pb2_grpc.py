# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from yandex.cloud.cloudapps.workload.v1 import cloud_application_pb2 as yandex_dot_cloud_dot_cloudapps_dot_workload_dot_v1_dot_cloud__application__pb2
from yandex.cloud.cloudapps.workload.v1 import cloud_application_service_pb2 as yandex_dot_cloud_dot_cloudapps_dot_workload_dot_v1_dot_cloud__application__service__pb2


class CloudApplicationServiceStub(object):
    """Cloud Application Service to be used by Workload software inside Cloud Application installations
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_unary(
                '/yandex.cloud.cloudapps.workload.v1.CloudApplicationService/Get',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_cloudapps_dot_workload_dot_v1_dot_cloud__application__pb2.CloudApplication.FromString,
                )
        self.ResolveByWorkload = channel.unary_unary(
                '/yandex.cloud.cloudapps.workload.v1.CloudApplicationService/ResolveByWorkload',
                request_serializer=yandex_dot_cloud_dot_cloudapps_dot_workload_dot_v1_dot_cloud__application__service__pb2.ResolveByWorkloadRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_cloudapps_dot_workload_dot_v1_dot_cloud__application__service__pb2.ResolveByWorkloadResponse.FromString,
                )


class CloudApplicationServiceServicer(object):
    """Cloud Application Service to be used by Workload software inside Cloud Application installations
    """

    def Get(self, request, context):
        """Get Current Application
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResolveByWorkload(self, request, context):
        """Resolve Cloud Application by workload
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CloudApplicationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=yandex_dot_cloud_dot_cloudapps_dot_workload_dot_v1_dot_cloud__application__pb2.CloudApplication.SerializeToString,
            ),
            'ResolveByWorkload': grpc.unary_unary_rpc_method_handler(
                    servicer.ResolveByWorkload,
                    request_deserializer=yandex_dot_cloud_dot_cloudapps_dot_workload_dot_v1_dot_cloud__application__service__pb2.ResolveByWorkloadRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_cloudapps_dot_workload_dot_v1_dot_cloud__application__service__pb2.ResolveByWorkloadResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'yandex.cloud.cloudapps.workload.v1.CloudApplicationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CloudApplicationService(object):
    """Cloud Application Service to be used by Workload software inside Cloud Application installations
    """

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/yandex.cloud.cloudapps.workload.v1.CloudApplicationService/Get',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            yandex_dot_cloud_dot_cloudapps_dot_workload_dot_v1_dot_cloud__application__pb2.CloudApplication.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResolveByWorkload(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/yandex.cloud.cloudapps.workload.v1.CloudApplicationService/ResolveByWorkload',
            yandex_dot_cloud_dot_cloudapps_dot_workload_dot_v1_dot_cloud__application__service__pb2.ResolveByWorkloadRequest.SerializeToString,
            yandex_dot_cloud_dot_cloudapps_dot_workload_dot_v1_dot_cloud__application__service__pb2.ResolveByWorkloadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
